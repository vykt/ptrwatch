.\" Netnote man(1) page
.IX Title "PTRWATCH 1
.TH PTRSCAN 1 "APRIL 2024" "ptrwatch 0.0.1" "ptrwatch"
.SH "NAME"
ptrwatch \- observe pointer chains
.SH "SYNOPSIS"
.B ptrscan
.RI \fB-c\fR
.RI [ CONFIG_PATH "]
.RI [ TARGET_PROCESS "]
.sp 0
.SH "DESCRIPTION"
.PP
\fBptrwatch\fR follows pointer chains defined in \fICONFIG_PATH\fR and displays 
the values at the end of the chain. The final address of each chain is re-read 
every 0.1 seconds, allowing you to observe changes in real time.

In case structures inside the pointer chain are reallocated, you can press 
\fIENTER\fR to re-follow each chain and arrive at a new final address.

The \fICONFIG_PATH\fR config file defines both the pointer chains and the format 
the chains are displayed in.
.SH "OPTIONS"

.TP
.BR \-c\ \fICONFIG_PATH\fB ", " \-\-config\=\fICONFIG_PATH\fB
Specify the config file to use. If this option is not provided, \fBptrwatch\fR will 
attempt to use \fI./ptrwatch.cfg\fR as the configuration file.


.SH "EXAMPLES"
.PP
\fBptrwatch\fR \fIexample_proc\fR
.PP
     Watch pointer chains of process \fIexample_proc\fR using the default \fIptrwatch.cfg\fR.
.PP
\fBptrwatch -c\fR \fInew_config.cfg\fR \fIexample_proc\fR
.PP
    Watch pointer chains of process \fIexample_proc\fR, using \fInew_config.cfg\fR as the config file.


.SH "CONFIGURATION FILE"
.PP
The config file can contain \fI3\fR types of lines. Blank lines are allowed:

.BR comments
.RS
Comments begin with a '\fI#\fR' and span the entire line.

\fIconfig\fR:
.RS
# this is a comment
.RE

\fIoutput\fR:
.RS
<none>
.RE
.RE

.BR titles
.RS
Titles begin with a '\fI>\fR' and span the entire line. Titles have a red colour and should be used to provide structure to the output of \fBptrwatch\fR.

\fIconfig\fR:
.RS
>this is a title
.RE

\fIoutput\fR:
.RS
this is a title
.RE
.RE

.BR entries
.RS
Entries display the value at the end of a pointer chain. An entry takes the following format:

.RS
\fB<type>:<start_backing_file> <offsets>\fR
.RE

\fBtype\fR can be any of:
.RS
.B \[bu] \fIuint8\fR
.B \[bu] \fIint8\fR
.B \[bu] \fIuint16\fR
.B \[bu] \fIint16\fR
.B \[bu] \fIuint32\fR
.B \[bu] \fIint32\fR
.B \[bu] \fIuint64\fR
.B \[bu] \fIint64\fR
.B \[bu] \fIfloat\fR
.B \[bu] \fIdouble\fR
.B \[bu] \fIstring:<len>\fR
.RE

Note that the \fIstring\fR \fBtype\fR takes an additional length parameter \fI<len>\fR.

\fBstart_backing_file\fR can either be the string representation of the backing file (e.g. 'libc.so.6) or a starting address in written in hexadecimal with a '0x' prefix.

\fBoffsets\fR are a space delimited list of 


\fIconfig\fR:
.RS
>HP and name 

int32:[heap] 0x1234 0x30 0x10

string:16:0x55bc573e5000 0x12200 0x200 0x40 0x10
.RE

\fIoutput\fR:
.RS
HP and name

120

borzoi best boy
.RE

.RE
